{"@/components/ui/Button.vue":"<script setup lang=\"ts\">\nimport { type PropType } from 'vue';\n\nconst SIZES = {\n  xs: 'text-xs h-6 px-1.5',\n  sm: 'text-sm h-8 px-2',\n  base: 'text-base h-10 px-3',\n};\n\ndefineProps({\n  size: {\n    type: String as PropType<keyof typeof SIZES>,\n    default: 'base',\n  },\n  variant: {\n    type: String,\n    default: 'primary',\n  },\n  outlined: {\n    type: Boolean,\n  },\n});\n</script>\n\n<template>\n  <button\n    :class=\"`cursor-pointer ${(SIZES as any)[size]} ${\n      outlined !== undefined && outlined !== false ? \n        `border border-${variant} text-${variant} hover:bg-${variant} hover:text-${variant}-contrast` \n      : `bg-${variant} text-${variant}-contrast`}`\"\n  >\n    <slot></slot>\n  </button>\n</template>\n","@/components/ui/Checkbox.vue":"<script setup lang=\"ts\">\nimport CheckIcon from '@/icons/CheckIcon.vue';\n\n(window as any).walli ??= {};\n(window as any).walli.cid ??= 0;\nconst id = `cbx-${++(window as any).walli.cid}`;\n\ndefineProps({\n  label: String,\n  type: String,\n  name: String,\n  value: [String, Number, Boolean],\n  variant: {\n    type: String,\n    default: 'primary',\n  },\n});\n\nconst model = defineModel();\n</script>\n\n<template>\n  <span class=\"text-sm leading-4 inline-flex items-center\">\n    <!-- VALUE -->\n    <input\n      class=\"peer hidden\"\n      :type=\"type || 'checkbox'\"\n      :id=\"id\"\n      :value=\"value\"\n      :name=\"name\"\n      v-model=\"model\"\n    />\n    <!-- END VALUE -->\n    <label\n      :for=\"id\"\n      :class=\"`inline-block peer-checked:hidden border border-${variant} w-4 h-4 m-0.5 ${\n        type === 'radio' ? 'rounded-full' : 'rounded'\n      }`\"\n    >\n    </label>\n    <label\n      :for=\"id\"\n      :class=\"`hidden peer-checked:inline-block border border-${variant} bg-${variant} text-${variant}-contrast w-4 h-4 m-0.5 ${\n        type === 'radio' ? 'rounded-full' : 'rounded'\n      }`\"\n    >\n      <span\n        v-if=\"type === 'radio'\"\n        class=\"w-3.5 h-3.5 inline-block rounded-full border-2 border-background\"\n      ></span>\n      <CheckIcon v-else class=\"w-3.5 h-3.5\" />\n    </label>\n    <label\n      :for=\"id\"\n      class=\"inline-block p-0.5 pl-1.5 select-none\"\n      v-if=\"label\"\n      >{{ label }}</label\n    >\n  </span>\n</template>\n","@/components/ui/ColorWheel.vue":"<script setup>\nimport {\n  computed,\n  onBeforeUnmount,\n  onMounted,\n  onUnmounted,\n  ref,\n  render,\n  watch,\n} from 'vue';\n\n// input\nconst props = defineProps(['value']);\nconst emits = defineEmits(['select']);\n\n// constants\nconst WIDTH = 280;\nconst HEIGHT = 280;\nconst NO_PARTS = 360;\nconst CIRCLE_ANGLE = 2 * Math.PI;\nconst OUTER_RADIUS = WIDTH / 2;\nconst INNER_RADIUS = WIDTH * 0.375;\nconst WATCH_RADIUS = (((OUTER_RADIUS - INNER_RADIUS) / 2) * 3) / 4;\nconst WATCH_PADDING = (OUTER_RADIUS - INNER_RADIUS) / 2 / 8;\nconst PADDING = WIDTH / 20;\nconst LC_OUTER_RADIUS = INNER_RADIUS - PADDING;\nconst LC_INNER_RADIUS = INNER_RADIUS - PADDING * 2.5;\nconst REDUCE_SPACE = 0.001;\nconst SURFACE_COLOR = '#e0e0e0';\nconst BACKGROUND_COLOR = '#424242';\nconst SCHEMA_MODES = [\n  /* monochromatic */ [0],\n  /* analogous */ [-1 / 12, 0, 1 / 12],\n  /* complementary */ [0, 6 / 12],\n  /* triad */ [-4 / 12, 0, 4 / 12],\n  /* Split Complementary */ [-5 / 12, 0, 5 / 12],\n  /* square */ [-3 / 12, 0, 3 / 12, 6 / 12],\n];\n\n// utils\nfunction toCoord(value, radius) {\n  const angle = value * CIRCLE_ANGLE;\n  return [Math.sin(angle) * radius, -Math.cos(angle) * radius];\n}\n\nfunction placePart(from, to, outerR, innerR) {\n  const outerFrom = toCoord(from, outerR);\n  const outerTo = toCoord(to, outerR);\n\n  const innerFrom = toCoord(from, innerR);\n  const innerTo = toCoord(to, innerR);\n\n  return `M ${innerFrom[0]} ${innerFrom[1]} L ${outerFrom[0]} ${outerFrom[1]} L ${outerTo[0]} ${outerTo[1]} L ${innerTo[0]} ${innerTo[1]}Z`;\n}\n\nfunction renderColor(l, c, h) {\n  return `oklch(${Math.floor(l * 1000) / 10}% ${Math.floor(c * 1000) / 1000} ${\n    Math.floor(h * 360 * 1000) / 1000\n  })`;\n}\n\n// color wheel\nconst PARTS = [];\nfor (let i = 0; i < NO_PARTS; i++) {\n  const value = i / NO_PARTS;\n\n  const from = value - 1 / NO_PARTS / 2;\n  const to = value + REDUCE_SPACE + 1 / NO_PARTS / 2;\n\n  PARTS.push({\n    value,\n    path: placePart(from, to, OUTER_RADIUS, INNER_RADIUS),\n  });\n}\n\n// variables\nconst colorWheelRef = ref();\n\nconst l = ref(props.value?.[0] || 0.7);\nconst c = ref(props.value?.[1] || 0.3);\nconst h = ref(props.value?.[2] || 0);\n\nconst schemaIdx = ref(0);\n\nconst wheelParts = computed(() => {\n  return PARTS.map((part) => ({\n    ...part,\n    color: renderColor(l.value, c.value, part.value),\n  }));\n});\n\nconst colorPoints = computed(() => {\n  const points = [];\n\n  for (const offset of SCHEMA_MODES[schemaIdx.value]) {\n    const value = h.value + offset;\n    const point = {\n      offset,\n      value: [l.value, c.value, value],\n      position: toCoord(value, (OUTER_RADIUS + INNER_RADIUS) / 2),\n      color: renderColor(l.value, c.value, value),\n    };\n\n    points.push(point);\n  }\n\n  return points;\n});\n\nconst lightnessParts = computed(() => {\n  const from = 0.5;\n  const to = 1;\n\n  const partSize = 1 / NO_PARTS;\n  const result = [];\n  for (let i = from; i <= to; i += partSize) {\n    const value = (i - from) / (to - from);\n    result.push({\n      value,\n      path: placePart(\n        i,\n        i + partSize + REDUCE_SPACE,\n        LC_OUTER_RADIUS,\n        LC_INNER_RADIUS,\n      ),\n      color:\n        value <= l.value ? renderColor(value, c.value, h.value) : SURFACE_COLOR,\n    });\n  }\n\n  return result;\n});\n\nconst chromaParts = computed(() => {\n  const from = 0.5;\n  const to = 0;\n\n  const partSize = 1 / NO_PARTS;\n  const result = [];\n  for (let i = from; i > to; i -= partSize) {\n    const value = (i - from) / (to - from);\n    result.push({\n      value,\n      path: placePart(\n        i,\n        i + partSize + REDUCE_SPACE,\n        LC_OUTER_RADIUS,\n        LC_INNER_RADIUS,\n      ),\n      color:\n        value <= c.value ? renderColor(l.value, value, h.value) : SURFACE_COLOR,\n    });\n  }\n\n  return result;\n});\n\n// actions\nlet pickerMode;\n\nfunction pickColor(e) {\n  const bbox = colorWheelRef.value.getBoundingClientRect();\n\n  const x = e.clientX - bbox.x - bbox.width / 2;\n  const y = e.clientY - bbox.y - bbox.height / 2;\n\n  const rad = Math.atan2(x, -y);\n  const value = rad / CIRCLE_ANGLE + (rad < 0 ? 1 : 0);\n\n  const distance = (Math.sqrt(x * x + y * y) / bbox.width) * WIDTH;\n\n  if (pickerMode === 'h' || (!pickerMode && distance >= INNER_RADIUS)) {\n    pickerMode = 'h';\n    h.value = value;\n  } else if (\n    pickerMode === 'l' ||\n    (!pickerMode && distance >= LC_INNER_RADIUS && value >= 0.5)\n  ) {\n    pickerMode = 'l';\n    if (value >= 0.5 && value < 1) l.value = (value - 0.5) * 2;\n  } else if (\n    pickerMode === 'c' ||\n    (!pickerMode && distance >= LC_INNER_RADIUS && value < 0.5)\n  ) {\n    pickerMode = 'c';\n    if (value >= 0 && value < 0.5) c.value = 1 - value * 2;\n  }\n}\n\nlet selectTimeout;\nlet latestSelectValue;\nfunction doSelect(value) {\n  latestSelectValue = value;\n  if (selectTimeout) return;\n\n  selectTimeout = setTimeout(() => {\n    emits('select', latestSelectValue);\n    selectTimeout = null;\n  }, 1000 / 60);\n}\n\nfunction pickePoint(point) {\n  doSelect({\n    value: point.value,\n    color: point.color,\n  });\n}\n\n// events\nlet isMouseDown = false;\nfunction mouseDown(e) {\n  if (e.target.getAttribute('disabled') === 'true') return;\n\n  isMouseDown = true;\n\n  pickColor(e);\n}\n\nfunction mouseMove(e) {\n  if (!isMouseDown) return;\n\n  pickColor(e);\n}\n\nfunction mouseUp(e) {\n  if (!isMouseDown) return;\n  pickColor(e);\n\n  isMouseDown = false;\n  pickerMode = null;\n}\n\nonMounted(() => {\n  colorWheelRef.value.addEventListener('mousedown', mouseDown);\n  window.addEventListener('mousemove', mouseMove);\n  window.addEventListener('mouseup', mouseUp);\n});\n\nonBeforeUnmount(() => {\n  colorWheelRef.value.removeEventListener('mousedown', mouseDown);\n  window.removeEventListener('mousemove', mouseMove);\n  window.removeEventListener('mouseup', mouseUp);\n});\n\nwatch(\n  () => [l.value, c.value, h.value],\n  () => {\n    doSelect({\n      value: [l.value, c.value, h.value],\n      color: renderColor(l.value, c.value, h.value),\n    });\n  },\n);\n\nwatch(\n  () => [props.value],\n  () => {\n    if (!props.value || !Array.isArray(props.value) || props.value.length !== 3)\n      return;\n    if (\n      props.value?.[0] === l.value &&\n      props.value?.[1] === c.value &&\n      props.value?.[2] === h.value\n    )\n      return;\n\n    l.value = props.value[0];\n    c.value = props.value[1];\n    h.value = props.value[2];\n  },\n);\n</script>\n\n<template>\n  <svg\n    class=\"select-none\"\n    :viewBox=\"`-${WIDTH / 2} -${HEIGHT / 2} ${WIDTH} ${HEIGHT}`\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    ref=\"colorWheelRef\"\n  >\n    <path\n      v-for=\"part in wheelParts\"\n      :d=\"part.path\"\n      :style=\"`fill: ${part.color}`\"\n    />\n    <circle\n      v-for=\"point in colorPoints\"\n      :cx=\"point.position[0]\"\n      :cy=\"point.position[1]\"\n      :r=\"WATCH_RADIUS\"\n      stroke=\"#ffffff\"\n      :stroke-width=\"point.offset === 0 ? WATCH_PADDING * 2 : WATCH_PADDING\"\n      :style=\"`fill: ${point.color}`\"\n      @click=\"pickePoint(point)\"\n      :disabled=\"point.offset === 0 ? false : true\"\n    />\n    <path\n      v-for=\"lPart in lightnessParts\"\n      :d=\"lPart.path\"\n      :style=\"`fill: ${lPart.color}`\"\n    />\n    <path\n      v-for=\"cPart in chromaParts\"\n      :d=\"cPart.path\"\n      :style=\"`fill: ${cPart.color}`\"\n    />\n\n    <!-- Top-left box (L) -->\n    <rect x=\"-34\" y=\"-34\" width=\"32\" height=\"32\" rx=\"6\" :fill=\"SURFACE_COLOR\" />\n\n    <!-- Top-right box (C) -->\n    <rect x=\"2\" y=\"-34\" width=\"32\" height=\"32\" rx=\"6\" :fill=\"SURFACE_COLOR\" />\n\n    <!-- Bottom-left box (H) -->\n    <rect x=\"-34\" y=\"2\" width=\"32\" height=\"32\" rx=\"6\" :fill=\"SURFACE_COLOR\" />\n\n    <!-- Bottom-right box (Arrow) -->\n    <rect\n      x=\"2\"\n      y=\"2\"\n      width=\"32\"\n      height=\"32\"\n      rx=\"6\"\n      :fill=\"BACKGROUND_COLOR\"\n      @click=\"schemaIdx = (schemaIdx + 1) % SCHEMA_MODES.length\"\n    />\n\n    <!-- Top-left text (L) -->\n    <text\n      x=\"-18\"\n      y=\"-18\"\n      text-anchor=\"middle\"\n      dominant-baseline=\"middle\"\n      font-weight=\"bold\"\n      font-size=\"12\"\n      fill=\"#000000\"\n    >\n      {{ Math.round(l * 100) / 100 }}\n    </text>\n\n    <!-- Top-right text (C) -->\n    <text\n      x=\"18\"\n      y=\"-18\"\n      text-anchor=\"middle\"\n      dominant-baseline=\"middle\"\n      font-weight=\"bold\"\n      font-size=\"12\"\n      fill=\"#000000\"\n    >\n      {{ Math.round(c * 100) / 100 }}\n    </text>\n\n    <!-- Bottom-left text (H) -->\n    <text\n      x=\"-18\"\n      y=\"18\"\n      text-anchor=\"middle\"\n      dominant-baseline=\"middle\"\n      font-weight=\"bold\"\n      font-size=\"12\"\n      fill=\"#000000\"\n    >\n      {{ Math.round(h * 360) }}\n    </text>\n\n    <!-- Bottom-right text (Arrow) -->\n    <text\n      x=\"18\"\n      y=\"18\"\n      text-anchor=\"middle\"\n      dominant-baseline=\"middle\"\n      font-weight=\"bold\"\n      font-size=\"16\"\n      fill=\"#ffffff\"\n      class=\"pointer-events-none\"\n    >\n      →\n    </text>\n  </svg>\n</template>\n","@/components/ui/Field.vue":"<script setup lang=\"ts\">\ndefineProps(['label', 'helperText', 'helperClass']);\n\n(window as any).walli ??= {};\n(window as any).walli.cid ??= 0;\nconst id = `field-${++(window as any).walli.cid}`;\n</script>\n\n<template>\n  <div class=\"flex flex-col gap-2\">\n    <slot name=\"label\" v-bind=\"{ id }\">\n      <label :for=\"id\" class=\"text-sm leading-4 font-semibold\" v-if=\"label\">{{\n        label\n      }}</label>\n    </slot>\n    <slot name=\"content\" v-bind=\"{ id }\">\n      <div class=\"flex items-start gap-2\">\n        <slot v-bind=\"{ id }\"></slot>\n      </div>\n    </slot>\n    <slot name=\"helper\" v-bind=\"{ id, helperText, helperClass }\">\n      <div v-if=\"helperText\" :class=\"`text-xs ${helperClass}`\">\n        {{ helperText }}\n      </div>\n    </slot>\n  </div>\n</template>\n","@/components/ui/Input.vue":"<script setup lang=\"ts\">\nimport { ref, watch, type PropType, type Ref } from 'vue';\n\nconst COMPONENTS = { input: 'input' };\n\nconst SIZES = {\n  xs: 'text-xs h-6 px-1.5',\n  sm: 'text-sm h-8 px-2',\n  base: 'text-base h-10 px-3',\n};\n\nconst props = defineProps({\n  component: {\n    type: String as PropType<keyof typeof COMPONENTS>,\n    default: 'input',\n  },\n  size: {\n    type: String as PropType<keyof typeof SIZES>,\n    default: 'base',\n  },\n  modelValue: {\n    type: String,\n    default: '',\n  },\n});\nconst emit = defineEmits(['update:modelValue']);\n\nconst localValue: Ref<string> = ref(props.modelValue ?? '');\n\nwatch(\n  () => localValue.value,\n  () => {\n    emit('update:modelValue', localValue.value);\n  },\n);\n\nwatch(\n  () => props.modelValue,\n  () => {\n    if (props.modelValue === localValue.value) return;\n    localValue.value = props.modelValue;\n  },\n);\n</script>\n\n<template>\n  <input\n    v-model=\"localValue\"\n    v-if=\"component === COMPONENTS.input\"\n    :class=\"`border border-border outline-none w-full ${SIZES[size as keyof typeof SIZES]}`\"\n  />\n</template>\n","@/components/ui/LineGraph.vue":"<script setup>\nimport { onMounted, ref, watch } from 'vue';\n\nconst WIDTH = 400;\nconst HEIGHT = 300;\n\n/**\n * data should be a list\n * x is the name of x axis\n * y is the name if y axis\n */\nconst props = defineProps(['data', 'x', 'y']);\n\nconst path = ref('');\n\nfunction renderGraph() {\n  const dx = props.data.map((i) => i[props.x]);\n  const dy = props.data.map((i) => i[props.y]);\n\n  const minX = Math.min(...dx);\n  const maxX = Math.max(...dx);\n\n  const minY = Math.min(...dy);\n  const maxY = Math.max(...dy);\n\n  let content = '';\n\n  for (let i = 0; i < dx.length; i++) {\n    const x = dx[i];\n    const y = dy[i];\n\n    content += `${content === '' ? 'M' : 'L'} ${((x - minX) / (maxX - minX)) * WIDTH} ${\n      ((y - minY) / (maxY - minY)) * HEIGHT\n    }`;\n  }\n\n  path.value = content;\n}\n\nonMounted(() => {\n  renderGraph();\n});\n\nwatch(() => [props.data, props.x, props.y], renderGraph);\n</script>\n\n<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" :viewBox=\"`0 0 ${WIDTH} ${HEIGHT}`\">\n    <path :d=\"path\" stroke=\"currentColor\" stroke-width=\"10\" fill=\"none\" />\n  </svg>\n</template>\n","@/components/ui/Sidebar.vue":"<script setup lang=\"ts\">\nimport {\n  computed,\n  onMounted,\n  onUnmounted,\n  ref,\n  type CSSProperties,\n  type Ref,\n} from 'vue';\n\nconst props = defineProps({\n  side: {\n    default: 'left',\n  },\n});\n\nconst DEVICES = {\n  MOBILE: 'mobile',\n  PC: 'pc',\n};\n\nconst SIDES = {\n  LEFT: 'left',\n  RIGHT: 'right',\n};\n\n/**\n * status [false] + device [mobile] = hidden\n * status [false] + device [pc] = visible\n * status [true] + device [mobile] = float\n * status [true] + device [pc] = hidden\n */\nconst status = defineModel({ default: false });\nconst device = ref(DEVICES.MOBILE);\nconst width = ref(0);\nconst sidebarRef: Ref<any> = ref();\nlet breakpointLg = 1024;\n\nconst currentStyles = computed<CSSProperties>(() => {\n  const result: CSSProperties = {};\n\n  if (device.value === DEVICES.MOBILE) {\n    result.position = 'absolute';\n    result[props.side === SIDES.LEFT ? 'left' : 'right'] = status.value\n      ? '0px'\n      : -width.value + 'px';\n  } else {\n    result.position = 'sticky';\n    result.top = '0px';\n    result[props.side === SIDES.LEFT ? 'marginLeft' : 'marginRight'] =\n      status.value ? -width.value + 'px' : '0px';\n  }\n\n  return result;\n});\n\nfunction init() {\n  const rootStyles = getComputedStyle(document.documentElement);\n  const strBreakpointLg = rootStyles.getPropertyValue('--breakpoint-lg').trim();\n\n  if (strBreakpointLg) {\n    const rootFontSize = parseFloat(\n      getComputedStyle(document.documentElement).fontSize,\n    );\n    breakpointLg =\n      parseFloat(strBreakpointLg.replace(/rem$/, '')) * rootFontSize;\n  }\n}\n\nfunction resize() {\n  if (window.innerWidth < breakpointLg) device.value = DEVICES.MOBILE;\n  else device.value = DEVICES.PC;\n\n  width.value = sidebarRef.value.getBoundingClientRect().width;\n}\n\nonMounted(() => {\n  init();\n  resize();\n\n  window.addEventListener('resize', resize);\n});\n\nonUnmounted(() => {\n  window.removeEventListener('resize', resize);\n});\n</script>\n\n<template>\n  <div :style=\"currentStyles\" ref=\"sidebarRef\">\n    <slot></slot>\n  </div>\n</template>\n","index.html":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n    <title>wal-li/ui</title>\n\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700;900&display=swap\"\n      rel=\"stylesheet\"\n    />\n  </head>\n  <body\n    class=\"bg-background text-foreground text-sanns overflow-y-scroll antialiased\"\n  >\n    <div id=\"app\"></div>\n    <script type=\"module\" src=\"/src/main.ts\"></script>\n  </body>\n</html>\n","tsconfig.json":"{\n  \"files\": [],\n  \"references\": [\n    { \"path\": \"./tsconfig.app.json\" },\n    { \"path\": \"./tsconfig.node.json\" }\n  ],\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  }\n}\n","tsconfig.app.json":"{\n  \"extends\": \"@vue/tsconfig/tsconfig.dom.json\",\n  \"compilerOptions\": {\n    \"tsBuildInfoFile\": \"./node_modules/.tmp/tsconfig.app.tsbuildinfo\",\n\n    /* Linting */\n    \"strict\": true,\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"erasableSyntaxOnly\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"noUncheckedSideEffectImports\": true,\n\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"src/**/*.ts\", \"src/**/*.tsx\", \"src/**/*.vue\"]\n}\n","vite.config.ts":"import { resolve } from 'path';\nimport vue from '@vitejs/plugin-vue';\nimport tailwindcss from '@tailwindcss/vite';\n\n/** @type {import('vite').UserConfig} */\nexport default {\n  plugins: [vue(), tailwindcss()],\n  resolve: {\n    alias: {\n      '@': resolve('./src'),\n    },\n  },\n};\n","src/vite-env.d.ts":"/// <reference types=\"vite/client\" />\n\ndeclare module '*.vue' {\n  import { DefineComponent } from 'vue';\n  const component: DefineComponent<{}, {}, any>;\n  export default component;\n}\n","src/style.css":"@import 'tailwindcss';\n\n@custom-variant dark (&:where(.dark, .dark *));\n\n@theme {\n  --color-primary: oklch(65% 0.3 220.392);\n  --color-secondary: oklch(50% 0.2 180);\n  --color-accent: oklch(70% 0.4 288);\n  --color-surface: oklch(94% 0 0);\n  --color-border: oklch(90% 0 0);\n  --color-success: oklch(65% 0.302 144.684);\n  --color-danger: oklch(65% 0.302 24.66);\n  --color-warning: oklch(65% 0.302 114.66);\n  --color-info: oklch(65% 0.302 269.712);\n  --color-background: oklch(98% 0 0);\n  --color-foreground: oklch(20% 0 0);\n\n  --color-primary-contrast: oklch(20% 0 0);\n  --color-secondary-contrast: oklch(98% 0 0);\n  --color-accent-contrast: oklch(20% 0 0);\n  --color-surface-contrast: oklch(20% 0 0);\n  --color-success-contrast: oklch(20% 0 0);\n  --color-danger-contrast: oklch(20% 0 0);\n  --color-warning-contrast: oklch(20% 0 0);\n  --color-info-contrast: oklch(20% 0 0);\n  --color-foreground-contrast: oklch(98% 0 0);\n\n  --breakpoint-3xl: 112rem;\n  --breakpoint-4xl: 128rem;\n\n  --container-8xl: 88rem;\n  --container-9xl: 96rem;\n  --container-10xl: 112rem;\n  --container-11xl: 120rem;\n  --container-12xl: 128rem;\n\n  --text-10xl: 10rem;\n\n  --text-heading-1: clamp(4rem, 7.81vw, 10rem);\n  --text-heading-2: clamp(2.25rem, 6.25vw, 8rem);\n  --text-heading-3: clamp(1.875rem, 4.68vw, 6rem);\n  --text-heading-4: clamp(1.5rem, 3.51vw, 4.5rem);\n  --text-heading-5: clamp(1.25rem, 2.91vw, 3.75rem);\n  --text-heading-6: clamp(1.125rem, 2.34vw, 3rem);\n\n  --text-heading-1--line-height: 1;\n  --text-heading-2--line-height: 1;\n  --text-heading-3--line-height: 1;\n  --text-heading-4--line-height: 1;\n  --text-heading-5--line-height: 1.2;\n  --text-heading-6--line-height: 1.3;\n\n  --text-paragraph: 1.125rem;\n  --text-paragraph--line-height: 1.5;\n\n  --font-sans: Poppins, sans-serif;\n}\n\n@source inline('bg-primary text-primary text-primary-contrast border-primary hover:bg-primary hover:text-primary-contrast hover:border-primary');\n@source inline('bg-secondary text-secondary text-secondary-contrast border-secondary hover:bg-secondary hover:text-secondary-contrast hover:border-secondary');\n@source inline('bg-accent text-accent text-accent-contrast border-accent hover:bg-accent hover:text-accent-contrast hover:border-accent');\n@source inline('bg-surface text-surface text-surface-contrast border-surface hover:bg-surface hover:text-surface-contrast hover:border-surface');\n@source inline('bg-success text-success text-success-contrast border-success hover:bg-success hover:text-success-contrast hover:border-success');\n@source inline('bg-danger text-danger text-danger-contrast border-danger hover:bg-danger hover:text-danger-contrast hover:border-danger');\n@source inline('bg-warning text-warning text-warning-contrast border-warning hover:bg-warning hover:text-warning-contrast hover:border-warning');\n@source inline('bg-info text-info text-info-contrast border-info hover:bg-info hover:text-info-contrast hover:border-info');\n@source inline('bg-foreground text-foreground text-foreground-contrast border-foreground hover:bg-foreground hover:text-foreground-contrast hover:border-foreground');\n\n@layer components {\n  .prose h1 {\n    @apply text-5xl font-bold mt-8 mb-4 first:mt-0;\n  }\n\n  .prose h2 {\n    @apply text-4xl font-bold mt-8 mb-4 first:mt-0;\n  }\n\n  .prose h3 {\n    @apply text-3xl font-bold mt-8 mb-4 first:mt-0;\n  }\n\n  .prose h4 {\n    @apply text-2xl font-bold mt-8 mb-4 first:mt-0;\n  }\n\n  .prose h5 {\n    @apply text-xl font-bold mt-8 mb-4 first:mt-0;\n  }\n\n  .prose h6 {\n    @apply text-lg font-bold mt-8 mb-4 first:mt-0;\n  }\n\n  .prose p,\n  .prose pre,\n  .prose blockquote {\n    @apply text-paragraph my-4;\n  }\n\n  .prose img {\n    @apply my-4 max-w-full w-fit mx-auto;\n  }\n\n  .prose img + i {\n    @apply block w-fit mx-auto mb-4 text-center;\n  }\n\n  .prose ul {\n    @apply list-disc ml-8 text-lg my-4;\n  }\n\n  .prose ol {\n    @apply list-decimal ml-8 text-lg my-4;\n  }\n\n  .prose pre {\n    @apply bg-surface p-4 rounded-lg text-sm font-mono overflow-auto;\n  }\n\n  .prose blockquote {\n    @apply bg-surface p-4 border-l-4 border-primary;\n  }\n\n  .prose code {\n    @apply bg-surface p-2 font-mono rounded;\n  }\n}\n"}